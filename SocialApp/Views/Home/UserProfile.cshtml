@using SocialApp.DB.ViewModel
@model  UserProfileViewModel 

@{
    ViewBag.Title = "User Profile";
}
<h2>UserProfile</h2>
<div class="row">
    <div class="col-md-8">
        @using (Html.BeginForm("UserProfile", "Home", FormMethod.Post,
            new { @class = "form-horizontal", role = "form" , enctype = "multipart/form-data"}))
        {
            <h4>Complete your profile.</h4>
            <hr />
            @Html.ValidationSummary("", new { @class = "text-danger" })
            <input type="hidden" name="UserID" value="@ViewBag.UserId" />
            <div class="form-group">
                @Html.LabelFor(Model=> Model.SelectedOrganization, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(Model => Model.SelectedOrganization,
                            (SelectList)ViewBag.Organizations , "-- Select Organization --"
                            ,new { @class = "form-control"
                            } )
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ProfilePhoto, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    <input type="file" name="ProfilePhoto" value="ProfilePhoto" class="btn btn-default" />
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Gender, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m=>m.Gender, new List<SelectListItem>
                        {
                            new SelectListItem{ Text="Male", Value="Male"},
                            new SelectListItem{ Text="Female", Value="Female"}
                        }, "--- Select ---", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Address, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextAreaFor(m => m.Address, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.DOB, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.DOB, new { @class = "form-control" })

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.MobileNO, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.MobileNO, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.CountryID, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(Model => Model.CountryID
                        ,(SelectList)ViewBag.CountryDropDown
                        , "--Select Country--"
                        , new { @class = "form-control", @id = "SelectedCountry"})
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.StateID, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.StateID
                        , new SelectList(string.Empty, "Value", "Text")
                        , "--Select State--"
                        , new { @class = "form-control" , @id = "States" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.CityID, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                   @Html.DropDownListFor(m => m.CityID
                        , new SelectList(string.Empty, "Value", "Text")
                        , "--Select City--"
                        , new { @class = "form-control", @id = "Cities" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="Submit" />
                </div>
            </div>
        }
    </div>
</div>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
@section Scripts{
    <script type="text/javascript">
            $(function () {
                $('#DOB').datetimepicker({
                    format: 'YYYY-MM-DD'
                });
            });

            $("#SelectedCountry").change(function () {
                var countryId = $('#SelectedCountry').val();
                $.ajax({
                    url: "/Home/StatesByCountryID/"+ countryId ,
                    type: "Get",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'JSON',
                    success: function (data) {
                        $('#States').empty();
                        for (var i = 0; i < data.state.length; i++) {
                            $('#States').append("<option value= " + data.state[i].Value + ">" + data.state[i].Text + "</option>");
                        }
                        //$.each(data, function (index) {
                        //    var obj = $(this);
                        //    console.log(obj);
                        //    $('#States').append("<option value= " + obj[0].Value + ">" + obj[0].Text + "</option>");
                        //});
                    }
                });
            });

            $("#States").change(function () {
                var stateId = $('#States').val();
                $.ajax({
                    url: "/Home/CitesByStateID/" + stateId,
                    type: "Get",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'JSON',
                    success: function (data) {
                        $('#Cities').empty();
                        for (var i = 0; i < data.city.length; i++) {
                            $('#Cities').append("<option value= " + data.city[i].Value + ">" + data.city[i].Text + "</option>");
                        }
                    }
                });
            });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
