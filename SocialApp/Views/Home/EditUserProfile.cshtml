@model SocialApp.DB.ViewModel.EditUserProfileViewModel

@{
    ViewBag.Title = "EditUserProfile";
}

<h2>EditUserProfile</h2>


@using (Html.BeginForm("EditUserProfile", "Home", FormMethod.Post,
         new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.UserID)
    @Html.HiddenFor(model => model.OrganizationID)

    <div class="form-horizontal">
        <h4>EditUserProfileViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ProfilePicPath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.HiddenFor(model=> model.ProfilePicPath)
                <img class="img-thumbnail" src="@Url.Content(Model.ProfilePicPath)" />
                @Html.ValidationMessageFor(model => model.ProfilePicPath, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProfilePhoto, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <input type="file" name="ProfilePhoto" value="ProfilePhoto" class="btn btn-default" />
                @Html.ValidationMessageFor(model => model.ProfilePhoto, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.CountryID, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(Model => Model.CountryID
                        , (SelectList)ViewBag.CountryDropDown
                        , "--Select Country--"
                        , new { @class = "form-control", @id = "SelectedCountry" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.StateID, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.StateID
                        , new SelectList(string.Empty, "Value", "Text")
                        , "--Select State--"
                        , new { @class = "form-control", @id = "States" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CityID, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.CityID
                        , new SelectList(string.Empty, "Value", "Text")
                        , "--Select City--"
                        , new { @class = "form-control", @id = "Cities" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
@section Scripts{
    <script type="text/javascript">
            $(function () {
                $('#DOB').datetimepicker({
                    format: 'YYYY-MM-DD'
                });
            });

            $("#SelectedCountry").change(function () {
                var countryId = $('#SelectedCountry').val();
                $.ajax({
                    url: "/Home/StatesByCountryID/"+ countryId ,
                    type: "Get",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'JSON',
                    success: function (data) {
                        $('#States').empty();
                        for (var i = 0; i < data.state.length; i++) {
                            $('#States').append("<option value= " + data.state[i].Value + ">" + data.state[i].Text + "</option>");
                        }
                        //$.each(data, function (index) {
                        //    var obj = $(this);
                        //    console.log(obj);
                        //    $('#States').append("<option value= " + obj[0].Value + ">" + obj[0].Text + "</option>");
                        //});
                    }
                });
            });

            $("#States").change(function () {
                var stateId = $('#States').val();
                $.ajax({
                    url: "/Home/CitesByStateID/" + stateId,
                    type: "Get",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'JSON',
                    success: function (data) {
                        $('#Cities').empty();
                        for (var i = 0; i < data.city.length; i++) {
                            $('#Cities').append("<option value= " + data.city[i].Value + ">" + data.city[i].Text + "</option>");
                        }
                    }
                });
            });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}